plugins {
  id 'com.android.application' version '8.6.0' apply false
  id 'com.android.library' version '8.6.0' apply false
  id 'com.google.gms.google-services' version '4.4.2' apply false
  id 'com.google.firebase.crashlytics' version '2.9.9' apply false
  id 'com.google.firebase.firebase-perf' version '1.4.2' apply false
  id 'io.codearte.nexus-staging' version '0.30.0'
}

group = (findProperty('GROUP') ?: 'org.smartregister').toString()
version = (findProperty('VERSION_NAME') ?: '0.0.1-SNAPSHOT').toString()

ext {
  jacocoVersion = '0.8.10'
  androidMinSdkVersion = 28
  androidCompileSdkVersion = 35
  androidTargetSdkVersion = 35
  androidBuildToolsVersion = '35.0.0'
}

allprojects {
  repositories {
    mavenLocal()
    google()
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url 'https://cloudant.github.io/cloudant-sync-eap/repository' }
    maven { url 'https://s3.amazonaws.com/repo.commonsware.com' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
  }

  configurations.all {
    resolutionStrategy {
      dependencySubstitution {
        substitute(module('com.github.BlueCodeSystems:opensrp-client-core'))
          .using(module('io.github.bluecodesystems:opensrp-client-core:6.2.2'))
        substitute(module('io.github.bluecodesystems:android-p2p-sync'))
          .using(module('com.github.BlueCodeSystems:android-p2p-sync:v0.4.3'))
      }
      force 'com.commonsware.cwac:saferoom.x:1.3.0'
    }
    exclude group: 'com.commonsware.cwac', module: 'saferoom'
  }
}

subprojects { sub ->
  tasks.withType(Test).configureEach { t ->
    maxParallelForks = 1
    forkEvery = 0
    jvmArgs(
      '--add-opens=java.base/java.lang=ALL-UNNAMED',
      '--add-opens=java.base/java.lang.reflect=ALL-UNNAMED',
      '--add-opens=java.base/java.io=ALL-UNNAMED',
      '--add-opens=java.base/java.net=ALL-UNNAMED',
      '--add-opens=java.base/java.util=ALL-UNNAMED',
      '--add-opens=java.base/java.text=ALL-UNNAMED',
      '--add-opens=java.base/java.security=ALL-UNNAMED',
      '--add-opens=java.base/jdk.internal.reflect=ALL-UNNAMED',
      '--add-opens=java.base/jdk.internal.misc=ALL-UNNAMED',
      '--add-opens=java.base/jdk.internal.util=ALL-UNNAMED',
      '--add-opens=java.base/sun.nio.ch=ALL-UNNAMED',
      '--add-opens=java.base/sun.security.util=ALL-UNNAMED',
      '--add-opens=java.desktop/java.awt.font=ALL-UNNAMED',
      '--add-exports=java.base/jdk.internal.reflect=ALL-UNNAMED'
    )
  }

  tasks.withType(JavaCompile).configureEach {
    options.fork = true
    options.forkOptions.memoryMaximumSize = '2048m'
  }
}

nexusStaging {
  serverUrl = 'https://s01.oss.sonatype.org/service/local/'
}
